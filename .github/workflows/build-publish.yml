name: 🏗️📤 Build and publish 🐳 images

on:
  push:
    paths:
      - 'Dockerfile'
      - 'requirements.txt'
      - 'api/**'
  workflow_dispatch:

env:
  GHCR_REGISTRY: ghcr.io
  DOCKERHUB_REGISTRY: docker.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  run-tests:
    name: ✅ Run tests
    runs-on: ubuntu-latest
    steps:
      - name: 👀📦 Checkout repository
        uses: actions/checkout@v2

      - name: 🌍 Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.x

      - name: 📚 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          pip install -r requirements.txt

      - name: 🔬 Run tests with pytest
        run: pytest

  build-image:
    name: 🛠 Build 🐳 image
    needs: [run-tests]
    runs-on: ubuntu-latest
    steps:
      - name: 👀📦 Checkout repository
        uses: actions/checkout@v2

      - name: 🔍📝 Extract metadata (🏷️, 🏷️) for 🐳
        id: meta
        uses: docker/metadata-action@v3.6.2
        with:
          images: ${{ env.GHCR_REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest

      - name: 🛠️ Build image
        id: build
        uses: docker/build-push-action@v2.7.0
        with:
          context: .
          push: false
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  test-image:
    name: ⚙️ Test 🐳 image
    needs: [build-image]
    runs-on: ubuntu-latest
    steps:
      - name: 👀📦 Checkout repository
        uses: actions/checkout@v2

      - name: ⚙️ Run container and test
        run: |
          docker run --name test_container -d -p 5000:5000 \
              -e SLACK_TOKENS=12345678 \
              -e DATA_URL=https://raw.githubusercontent.com/TheBoatyMcBoatFace/wtf-bot/main/test_acronyms.csv \
              ${{ steps.build.outputs.digest }}

          # Wait for a while for the services in the container to start up
          sleep 10

          # Test container
          response=$(curl --location --request POST 'http://localhost:5000/slack' \
              --header 'Content-Type: application/x-www-form-urlencoded' \
              --data-urlencode 'token=12345678' \
              --data-urlencode 'text=VBA')

          # Check response (adjust this to match actual expected output)
          if [[ "$response" == *"Veterans Benefits Administration"* && "$response" == *"VA"* ]]; then
            echo "Test passed!"
          else
            echo "Test failed!"
            exit 1
          fi

      - name: 🧹 Cleanup
        run: |
          docker stop test_container
          docker rm test_container

  push-image:
    name: 📤 Push 🐳 image
    needs: [test-image]
    runs-on: ubuntu-latest
    steps:
      - name: 👀📦 Checkout repository
        uses: actions/checkout@v2

      - name: 🔑📦 Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 📤 Push image
        uses: docker/build-push-action@v2.7.0
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
